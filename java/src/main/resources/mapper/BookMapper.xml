<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xzz.library.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="xzz.library.pojo.Book" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="book_type" property="bookType" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" /> <!-- mybatis' LONGVARCHAR >> mysql's LONGTEXT -->
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from books
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="xzz.library.pojo.Book" >
    insert into books (id, book_name, book_type, 
      author, publisher, price, 
      stock, total, detail)
    values (#{id,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{bookType,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{total,jdbcType=INTEGER}, #{detail,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="xzz.library.pojo.Book" >
    update books
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_type = #{bookType,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, book_name, book_type, author, publisher, price, stock, total, detail
    from books
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, book_name, book_type, author, publisher, price, stock, total
    from books
  </select>
  <select id="getBookList" parameterType="xzz.library.dto.BooksGetDto" resultMap="BaseResultMap" >
    select id, book_name, book_type, author, publisher, price, stock, total, detail
    from books
    <where>
      <if test="bookName!=null and bookName !=''">
        book_name like concat("%",#{bookName},"%")
      </if>
      <if test="bookType!=null and bookType !=''">
        and book_type like concat("%",#{bookType},"%")
      </if>
      <if test="author!=null and author !=''">
        and author like concat("%",#{author},"%")
      </if>
      <if test="publisher!=null and publisher !=''">
        and publisher like concat("%",#{publisher},"%")
      </if>
      <if test="stock!=null and stock ==1">
        and stock!=0
      </if>
      <if test="stock!=null and stock ==0">
        and stock=0
      </if>
    </where>
    limit #{page}, #{limit}
  </select>
  <select id="countBook" parameterType="xzz.library.dto.BooksGetDto" resultType="java.lang.Integer" >
    select count(0)
    from books
    <where>
      <if test="bookName!=null and bookName !=''">
        book_name like concat("%",#{bookName},"%")
      </if>
      <if test="bookType!=null and bookType !=''">
        and book_type like concat("%",#{bookType},"%")
      </if>
      <if test="author!=null and author !=''">
        and author like concat("%",#{author},"%")
      </if>
      <if test="publisher!=null and publisher !=''">
        and publisher like concat("%",#{publisher},"%")
      </if>
      <if test="stock!=null and stock ==1">
        and stock!=0
      </if>
      <if test="stock!=null and stock ==0">
        and stock=0
      </if>
    </where>
  </select>

</mapper>