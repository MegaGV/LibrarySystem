<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xzz.library.dao.BookReviewMapper" >
  <resultMap id="BaseResultMap" type="xzz.library.pojo.BookReview" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="detail" jdbcType="LONGVARCHAR" /> <!-- mybatis' LONGVARCHAR >> mysql's LONGTEXT -->
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from book_reviews
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="xzz.library.pojo.BookReview" >
    insert into book_reviews (id, user_id, book_id, 
      title, content, status)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{bookId,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="xzz.library.pojo.BookReview" >
    update book_reviews
    set user_id = #{userId,jdbcType=VARCHAR},
      book_id = #{bookType,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{publisher,jdbcType=LONGVARCHAR},
      status = #{total,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, user_id, book_id, title, content, status
    from book_reviews
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, user_id, book_id, title, content, status
    from book_reviews
  </select>
  <!-- 仅获取通过审核的书评 -->
  <select id="getBookReviewsByBook" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, user_id, book_id, title, content, status
    from book_reviews
    where book_id = #{bookId} and status = 1
  </select>
  <select id="getBookReviewsByUser" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, user_id, book_id, title, content, status
    from book_reviews
    where user_id = #{userId} and status = 1
  </select>
  <select id="getUserStatus" resultType="java.lang.String" >
    select status
    from book_reviews
    where id=#{statusId}
  </select>
  <select id="getStatusId" resultType="java.lang.Integer" >
    select id
    from book_reviews
    where status=#{statusStr}
  </select>
  <select id="getBookReviews" parameterType="xzz.library.dto.search.BookReviewSearchDto" resultMap="BaseResultMap" >
    select id, user_id, book_id, title, content, status
    from book_reviews
    <where>
      <if test="id!=null and id !=''">
         id like concat("%",#{id},"%")
      </if>
      <if test="userId!=null and userId !=''">
        user_id like concat("%",#{userId},"%")
      </if>
      <if test="bookId!=null and bookId !=''">
        book_id like concat("%",#{bookId},"%")
      </if>
      <if test="detail!=null and detail !=''">
        and title like concat("%",#{detail},"%")
        or content like concat("%",#{detail},"%")
      </if>
      <if test="status!=null">
        and status = #{status}
      </if>
    </where>
    limit #{page}, #{limit}
  </select>
  <select id="countBookReview" parameterType="xzz.library.dto.search.BookReviewSearchDto" resultType="java.lang.Integer" >
    select count(0)
    from book_reviews
    <where>
      <if test="id!=null and id !=''">
        id like concat("%",#{id},"%")
      </if>
      <if test="userId!=null and userId !=''">
        user_id like concat("%",#{userId},"%")
      </if>
      <if test="bookId!=null and bookId !=''">
        book_id like concat("%",#{bookId},"%")
      </if>
      <if test="detail!=null and detail !=''">
        and title like concat("%",#{detail},"%")
        or content like concat("%",#{detail},"%")
      </if>
      <if test="status!=null">
        and status = #{status}
      </if>
    </where>
  </select>
</mapper>